/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GuardhealthySystem;

import java.sql.Connection;
import java.util.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class RecordTable extends javax.swing.JFrame {

    /**
     * Creates new form ChildTable
     */
    public RecordTable() {
        initComponents();
        addchildColumn();
        displaydata();
        adddata();
    }
    String url = "jdbc:mysql://localhost:3306/Guard_healthy_System";
    String user = "root"; 
    String password = "";  
      DefaultTableModel tmodel = new DefaultTableModel();

    // Combo box model for medicine names
    DefaultComboBoxModel<String> medicineComboBoxModel = new DefaultComboBoxModel<>();
     public void addchildColumn() {
        tmodel.addColumn("Record ID");
        tmodel.addColumn("Vaccine ID");
        tmodel.addColumn("Vaccine Name");
        tmodel.addColumn("Administrated Date");
        tmodel.addColumn("Next Date");
        tmodel.addColumn("Child ID");
        Childtabledata.setModel(tmodel);
    }
     public void adddata(){
         DefaultComboBoxModel<String> comboBoxModel = new DefaultComboBoxModel<>(); // Initialize the ComboBoxModel
        
         try{
             Connection connection = DriverManager.getConnection(url, user, password); 
            String selectQuery = "SELECT * FROM childtable ";
            PreparedStatement preparedStatement = connection.prepareStatement(selectQuery);
               ResultSet resultSet = preparedStatement.executeQuery();
                    while (resultSet.next()) {
                     comboBoxModel.addElement(resultSet.getString("Childid"));
                    }
                    childidbox.setModel(comboBoxModel);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
     }
public void displaydata() {
        tmodel.setRowCount(0);
        try (Connection connection = DriverManager.getConnection(url, user, password)) {
            String selectQuery = "SELECT * FROM Recordtable";
            try (PreparedStatement preparedStatement = connection.prepareStatement(selectQuery)) {
                try (ResultSet resultSet = preparedStatement.executeQuery()) {
                    while (resultSet.next()) {
                        tmodel.addRow(new Object[]{
                                resultSet.getString("Recordid"),
                                resultSet.getString("vid"),
                                resultSet.getString("vname"),
                                resultSet.getString("administrateddate"),
                                resultSet.getString("nextdate"),
                                resultSet.getString("childid")
                        
                        });
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        viccinenumber = new javax.swing.JTextField();
        viccinename = new javax.swing.JTextField();
        admmdate = new com.toedter.calendar.JDateChooser();
        RegisterReccord = new javax.swing.JButton();
        Updaterecord = new javax.swing.JButton();
        Deleterecord = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Childtabledata = new javax.swing.JTable();
        recordsearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        serachrecord = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        nextdate = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        childidbox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Narrow", 1, 24)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel2.setText("Viccine Name ");

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel3.setText("Date Administrated");

        jLabel4.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel4.setText("Next Due date");

        viccinenumber.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        viccinename.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        admmdate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        RegisterReccord.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        RegisterReccord.setText("Register");
        RegisterReccord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterReccordActionPerformed(evt);
            }
        });

        Updaterecord.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Updaterecord.setText("Update");
        Updaterecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdaterecordActionPerformed(evt);
            }
        });

        Deleterecord.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        Deleterecord.setText("Delete");
        Deleterecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleterecordActionPerformed(evt);
            }
        });

        Childtabledata.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Childtabledata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Record ID", "Viccine Number", "Viccine Name", "Date Administrated", "Next Due Date", "Child ID"
            }
        ));
        Childtabledata.setRowHeight(35);
        jScrollPane1.setViewportView(Childtabledata);

        recordsearch.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel5.setText("Record ID");

        serachrecord.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        serachrecord.setText("Seach");
        serachrecord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serachrecordActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel6.setText("Viccine Number");

        nextdate.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial Narrow", 1, 18)); // NOI18N
        jLabel7.setText("Child ID");

        jButton4.setBackground(new java.awt.Color(0, 0, 255));
        jButton4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("<<Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        childidbox.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(viccinenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(viccinename, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addGap(116, 116, 116)
                        .addComponent(jLabel2)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(admmdate, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(56, 56, 56)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(nextdate, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(86, 86, 86))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(95, 95, 95))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(518, 518, 518))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(RegisterReccord, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(Updaterecord, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(Deleterecord, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(recordsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(serachrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(childidbox, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(viccinenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(viccinename, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(admmdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(12, 12, 12)
                        .addComponent(childidbox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RegisterReccord, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Updaterecord, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Deleterecord, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recordsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(serachrecord, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(1244, 798));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void RegisterReccordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterReccordActionPerformed
      
        java.util.Date todaydate = new java.util.Date();
         java.sql.Date sqlDate = new java.sql.Date(todaydate.getTime());
         
          java.util.Date admmdate = new java.util.Date();
         java.sql.Date admmdateDate = new java.sql.Date(admmdate.getTime());
         
         if(viccinename.getText().isEmpty()||viccinenumber.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Fill all Fields", "Error", JOptionPane.ERROR_MESSAGE);
         }else{  
        try{
            Connection connection = DriverManager.getConnection(url, user, password);
                String insertQuery = "INSERT INTO RecordTable(vid,vname,administrateddate,nextdate,childid) VALUES (?, ?, ?,?,?)";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                    preparedStatement.setString(1, viccinenumber.getText());
                    preparedStatement.setString(2, viccinename.getText());
                    preparedStatement.setDate(3,sqlDate);
                     preparedStatement.setDate(4,admmdateDate);
                      preparedStatement.setString(5, childidbox.getSelectedItem().toString());
                   
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Registered successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    displaydata();
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to register", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                
            } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Unexpected error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
         }
  
    }//GEN-LAST:event_RegisterReccordActionPerformed

    private void serachrecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serachrecordActionPerformed
           if(recordsearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Fill RecordSearch Field First", "Error", JOptionPane.ERROR_MESSAGE);
         } else{
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String seleQuery = "SELECT * FROM RecordTable where Recordid=?";
            PreparedStatement preparedStatement = connection.prepareStatement(seleQuery);
                preparedStatement.setString(1, recordsearch.getText());
                ResultSet resultSet = preparedStatement.executeQuery();
                    if(resultSet.next()) {
                        viccinenumber.setText(resultSet.getString("vid"));
                        viccinename.setText(resultSet.getString("vname"));
                        admmdate.setDate(resultSet.getDate("administrateddate"));
                        nextdate.setDate(resultSet.getDate("nextdate"));
                        childidbox.setSelectedItem(resultSet.getString("childid"));
                        
                        }else{
                        JOptionPane.showMessageDialog(null, " Record ID not Exist ", "Error", JOptionPane.ERROR_MESSAGE);
                    }              
       
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
           }
    }//GEN-LAST:event_serachrecordActionPerformed

    private void UpdaterecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdaterecordActionPerformed
       java.util.Date todaydate = new java.util.Date();
         java.sql.Date sqlDate = new java.sql.Date(todaydate.getTime());
         
          java.util.Date admmdate = new java.util.Date();
         java.sql.Date admmdateDate = new java.sql.Date(admmdate.getTime());
         if(viccinename.getText().isEmpty()||viccinenumber.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Fill all Fields", "Error", JOptionPane.ERROR_MESSAGE);
         }else{  
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
              String insertQuery = "UPDATE RecordTable SET vid=?,vname=?,administrateddate=?,nextdate=?,childid=? WHERE Recordid=?";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                    preparedStatement.setString(1, viccinenumber.getText());
                    preparedStatement.setString(2, viccinename.getText());
                    preparedStatement.setDate(3,sqlDate);
                     preparedStatement.setDate(4,admmdateDate);
                      preparedStatement.setString(5, childidbox.getSelectedItem().toString());
                       preparedStatement.setString(6, recordsearch.getText());
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Updated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    displaydata();
                    } else {
                        JOptionPane.showMessageDialog(null, "Updated fail", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                
            } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
      }
  
    }//GEN-LAST:event_UpdaterecordActionPerformed

    private void DeleterecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleterecordActionPerformed
     if(recordsearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Fill RecordSearch Field First", "Error", JOptionPane.ERROR_MESSAGE);
         } else{
        try {
            Connection connection = DriverManager.getConnection(url, user, password);
                String insertQuery = "DELETE FROM RecordTable  Where Recordid=?";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                    preparedStatement.setString(1, recordsearch.getText());
                    
                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Delete successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
                    displaydata();
                    } else {
                        JOptionPane.showMessageDialog(null, "Delete fail", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                
            } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
     }
    }//GEN-LAST:event_DeleterecordActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
        new Dashbord().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordTable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecordTable().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Childtabledata;
    private javax.swing.JButton Deleterecord;
    private javax.swing.JButton RegisterReccord;
    private javax.swing.JButton Updaterecord;
    private com.toedter.calendar.JDateChooser admmdate;
    private javax.swing.JComboBox<String> childidbox;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser nextdate;
    private javax.swing.JTextField recordsearch;
    private javax.swing.JButton serachrecord;
    private javax.swing.JTextField viccinename;
    private javax.swing.JTextField viccinenumber;
    // End of variables declaration//GEN-END:variables
}
